name: Build & Release


on:
  push:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  build-version-number: 0.1.${{ github.run_number }}
  package-version-number: 0.1.${{ github.run_number }}

jobs:
  sca:
    uses: ./.github/workflows/sca-scheduled.yml
      
  check-style:
    name: Check code style
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
                
      - name: Restore tools
        run: dotnet tool restore

      - name: Check style
        run: dotnet format --verify-no-changes

  codeql:
    uses: ./.github/workflows/codeql-analysis.yml
    
  tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet-version }}
        
      - name: dotnet tool restore
        run: dotnet tool restore

      - name: dotnet restore
        run: dotnet restore
              
      - name: Run tests
        run: dotnet test -c Debug --logger:"trx;LogFileName=test_results.trx" /p:CollectCoverage=true /p:CoverletOutput=./TestResults/coverage.info /p:CoverletOutputFormat=cobertura

      - name: Consolidate code coverage
        run: dotnet reportgenerator -reports:./tests/**/coverage.info -targetdir:./publish/codecoverage -reporttypes:html
      
      - name: Archive Test results
        uses: actions/upload-artifact@v3
        with:
          name: tests.results
          path: |
            ./tests/**/TestResults/*
      
      - name: Archive Code coverage
        uses: actions/upload-artifact@v3
        with:
          name: codecoverage
          path: ./publish/codecoverage/*.*

      - name: Unit test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: unit test results
          path: ${{ github.workspace }}/tests/Tk.Nuget.Tests.Unit/TestResults/test_results.trx
          reporter: dotnet-trx
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Code coverage results
        uses: 5monkeys/cobertura-action@master
        with:
          path: ${{ github.workspace }}/tests/Tk.Nuget.Tests.Unit/TestResults/coverage.info
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 80
          fail_below_threshold: true
          show_line: true
          show_branch: true
          show_missing: true
          show_class_names: true
          link_missing_lines: true
          report_name: code coverage results       

  package:
    name: Build package and release
    runs-on: ubuntu-latest
    needs: [ check-style, sca, codeql, tests ]

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
                
      - name: Restore tools
        run: dotnet tool restore
              
      - name: Restore solutiom
        run: dotnet restore

      - name: Set package version
        if: github.ref != 'refs/heads/main' 
        run: |
          echo "package-version-number=${{ env.package-version-number }}-preview" >> $GITHUB_ENV

      - name: Package
        run: dotnet pack -c Release -o ./package/ -p:PackageVersion=${{ env.package-version-number }}

      - name: Push package to Nuget
        if: github.event_name == 'push'
        run: dotnet nuget push "package/*.nupkg"  --api-key ${{ secrets.NUGET_PAT }} --source "nuget.org"

  gh-release:
    name: Github release
    runs-on: ubuntu-latest
    needs: [ package ]    
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:    
      - uses: actions/checkout@v3

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ env.build-version-number }}
          prerelease: false
          generateReleaseNotes: true