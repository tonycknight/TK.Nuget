name: Build & Release

permissions: # set permissions to principle of least privilege, codeql requires read permission to the repo content and PRs (if that option is set), and must have write permissions to security events in order to push results
  actions: read
  pull-requests: write
  security-events: write
  contents: write
  checks: write
  
on:
  push:
  workflow_dispatch:

env:
  build-version-number: 0.1.${{ github.run_number }}
  package-version-number: 0.1.${{ github.run_number }}

jobs:
  sca:
    uses: ./.github/workflows/sca-scheduled.yml
  
  codeql:
    uses: ./.github/workflows/codeql-analysis.yml

  mutation-testing:
    name: Mutation testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.dotnet-version }}
        
      - name: dotnet tool restore
        run: dotnet tool restore    

      - name: Run Stryker
        run: dotnet dotnet-stryker -r Html -r Markdown -O ./strykeroutput/

      - name: Mutation report
        run: cat ./strykeroutput/reports/mutation-report.md >> $GITHUB_STEP_SUMMARY
    
  tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.dotnet-version }}
        
      - name: dotnet tool restore
        run: dotnet tool restore

      - name: dotnet restore
        run: dotnet restore
              
      - name: Run tests
        run: dotnet test -c Debug --logger:"trx;LogFileName=test_results.trx" /p:CollectCoverage=true /p:CoverletOutput=./TestResults/coverage.info /p:CoverletOutputFormat=cobertura

      - name: Consolidate code coverage
        run: dotnet reportgenerator -reports:./tests/**/coverage.info -targetdir:./publish/codecoverage -reporttypes:html
      
      - name: Archive Test results
        uses: actions/upload-artifact@v4
        with:
          name: tests.results
          path: |
            ./tests/**/TestResults/*
      
      - name: Archive Code coverage
        uses: actions/upload-artifact@v4
        with:
          name: codecoverage
          path: ./publish/codecoverage/*.*

      - name: Unit test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: unit test results
          path: ${{ github.workspace }}/tests/Tk.Nuget.Tests.Unit/TestResults/test_results.trx
          reporter: dotnet-trx
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Code coverage results
        uses: 5monkeys/cobertura-action@master
        with:
          path: ${{ github.workspace }}/tests/Tk.Nuget.Tests.Unit/TestResults/coverage.info
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 80
          fail_below_threshold: true
          show_line: true
          show_branch: true
          show_missing: true
          show_class_names: true
          link_missing_lines: true
          report_name: code coverage results       

  package:
    name: Build package and release
    runs-on: ubuntu-latest
    needs: [ sca, codeql, tests, mutation-testing ]

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
                
      - name: Restore tools
        run: dotnet tool restore
              
      - name: Restore solutiom
        run: dotnet restore

      - name: Set package version
        if: github.ref != 'refs/heads/main' 
        run: |
          echo "package-version-number=${{ env.package-version-number }}-preview" >> $GITHUB_ENV

      - name: Package
        run: dotnet pack -c Release -o ./package/ -p:PackageVersion=${{ env.package-version-number }}

      - name: Push package to Nuget
        if: github.event_name == 'push' && github.actor != 'dependabot[bot]'
        run: dotnet nuget push "package/*.nupkg"  --api-key ${{ secrets.NUGET_PAT }} --source "nuget.org"

  gh-release:
    name: Github release
    runs-on: ubuntu-latest
    needs: [ package ]    
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:    
      - uses: actions/checkout@v4

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ env.build-version-number }}
          prerelease: false
          generateReleaseNotes: true